// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.27.0
// source: query.sql

package db_test

import (
	"context"
)

const getAnime = `-- name: GetAnime :one
SELECT id, name FROM animes
WHERE id = ? LIMIT 1
`

func (q *Queries) GetAnime(ctx context.Context, id int64) (Anime, error) {
	row := q.db.QueryRowContext(ctx, getAnime, id)
	var i Anime
	err := row.Scan(&i.ID, &i.Name)
	return i, err
}

const listAnimes = `-- name: ListAnimes :many
SELECT id, name FROM animes
ORDER BY name
`

func (q *Queries) ListAnimes(ctx context.Context) ([]Anime, error) {
	rows, err := q.db.QueryContext(ctx, listAnimes)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []Anime
	for rows.Next() {
		var i Anime
		if err := rows.Scan(&i.ID, &i.Name); err != nil {
			return nil, err
		}
		items = append(items, i)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
